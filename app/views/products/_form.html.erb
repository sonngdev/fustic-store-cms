<%= form_with(model: product, local: true) do |form| %>
  <% if product.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(product.errors.count, "error") %> prohibited this product from being saved:</h2>

      <ul>
        <% product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :name %>
    <%= form.text_field :name, autocomplete: 'product-name', placeholder: 'Batherobe kids', required: true %>
  </div>

  <div class="field">
    <%= form.label :slug %>
    <%= form.text_field :slug, placeholder: 'batherobe-kids', required: true %>
    <div>
      <small>
        This appears in product page's URL in the format
        &lt;domain&gt;/&lt;category-slug&gt;/&lt;product-slug&gt; <br>
        For example: fustic.store/t-shirts/batherobe-kids
      </small>
    </div>
  </div>

  <div class="field">
    <%= form.label :category_id %>
    <%= form.select :category_id, options_for_select(categories.collect { |c| [c.name, c.id] }) %>
  </div>

  <div class="field">
    <%= form.label :price_vnd, 'Price in VND' %>
    <%= form.number_field :price_vnd, step: 1000, placeholder: '420000', required: true %>
  </div>

  <div class="field">
    <%= form.label :price_usd, 'Price in USD' %>
    <%= form.number_field :price_usd, placeholder: '19.95', required: true, step: 0.01 %>
    <div>
      <small>
        This can be either a whole number (e.g. 19) or a decimal number (e.g. 19.95) <br>
        with a maximum of 2 digits after the decimal point. <br>
        The decimal point should be a dot (.) not a comma (,)
      </small>
    </div>
  </div>

  <% product.images.each_with_index do |image, i| %>
    <figure>
      <%= image_tag image, class: 'product-image' %>
    </figure>
  <% end %>

  <div class="field">
    <%= form.label :images, 'Images' %>
    <%= form.file_field :images, multiple: true, accept: 'image/png, image/jpeg' %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const name = document.querySelector('#product_name');
  const slug = document.querySelector('#product_slug');

  name.addEventListener('keyup', (e) => {
    slug.value = e.target.value
      .trim()
      .replace(/[\s_]+/g, '-')
      .toLowerCase();
  })
})
</script>
